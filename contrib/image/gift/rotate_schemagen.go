// Code generated by "github.com/hsfzxjy/imbed/schema/gen"; DO NOT EDIT.

package gift

import (
	"github.com/hsfzxjy/imbed/schema"
	"github.com/tinylib/msgp/msgp"
)

var rotateApplierSchema = schema.StructFunc(func(prototype *rotateApplier) *schema.StructBuilder[rotateApplier] {
	return schema.Struct(prototype,
		schema.F("rotateParams", &prototype.rotateParams, rotateParamsSchema),
	).DebugName("rotateApplier")
})

func (x *rotateApplier) EncodeMsg(w *msgp.Writer) error {
	return rotateApplierSchema.Build().EncodeMsg(w, x)
}

var rotateConfigSchema = schema.StructFunc(func(prototype *rotateConfig) *schema.StructBuilder[rotateConfig] {
	return schema.Struct(prototype).DebugName("rotateConfig")
})

func (x *rotateConfig) EncodeMsg(w *msgp.Writer) error {
	return rotateConfigSchema.Build().EncodeMsg(w, x)
}

var rotateParamsSchema = schema.StructFunc(func(prototype *rotateParams) *schema.StructBuilder[rotateParams] {
	return schema.Struct(prototype,
		schema.F("deg", &prototype.Deg, schema.Rat()),
		schema.F("itpl", &prototype.Interpolation, schema.String().Default("lin")),
	).DebugName("rotateParams")
})

func (x *rotateParams) EncodeMsg(w *msgp.Writer) error {
	return rotateParamsSchema.Build().EncodeMsg(w, x)
}
